(deffacts inicial
    (limite 4)
    (max 3)
    (checked no)
    (pedido naranjas 2 manzanas 3 caquis 0 uvas 1)
    (robot pos 0 naranjas 0 manzanas 0 caquis 0 uvas 0 cajas 0 palets naranjas 2 manzanas 3 caquis 0 uvas 1 almacen naranjas 0 manzanas 0 caquis 0 uvas 0)
)
(defrule mover_derecha
    ?f <- (robot pos ?p $?resto)
    (limite ?l)
    (test (< ?p ?l))
    =>
    (assert (robot pos (+ ?p 1) $?resto))
    (retract ?f)
)
(defrule comprobar_pedido
    (declare (salience 10))
    ?f <- (checked ?bool)
    (robot $?resto palets naranjas ?n1 manzanas ?m1 caquis ?c1 uvas ?u1 $?resto)
    (pedido naranjas ?n2 manzanas ?m2 caquis ?c2 uvas ?u2)
    (test (eq ?bool no))
    (test (<= ?n1 ?n2))
    (test (<= ?m1 ?m2))
    (test (<= ?c1 ?c2))
    (test (<= ?u1 ?u2))
    =>
    (retract ?f)
    (printout t El numero de cajas es insuficiente para completar el pedido crlf)
    (halt)
)
(defrule coger_naranjas
    (declare (salience 10))
    ?f <-(robot pos ?p naranjas ?n $?med cajas ?c palets naranjas ?n1 $?fin)
    (pedido naranjas ?n2 $?resto)
    (max ?max)
    (test (< ?c ?max))
    (test (= ?p 1))
    (test (< ?n ?n2))
    =>
    (retract ?f)
    (assert (robot pos ?p naranjas (+ ?n 1) $?med cajas (+ ?c 1) palets naranjas (- ?n1 1) $?fin))
)
(defrule coger_manzanas
    (declare (salience 10))
    ?f <- (robot pos ?p  $?ini manzanas ?n $?med cajas ?c palets $?med2 manzanas ?n1 $?fin)
    (pedido $?ini manzanas ?n2 $?resto)
    (max ?max)
    (test (< ?c ?max))
    (test (= ?p 2))
    (test (< ?n ?n2))
    =>
    (retract ?f)
    (assert (robot pos ?p  $?ini manzanas (+ ?n 1) $?med cajas (+ ?c 1) palets $?med2 manzanas (- ?n1 1) $?fin))
)
(defrule coger_caquis
    (declare (salience 10))
    ?f <- (robot pos ?p  $?ini caquis ?n $?med cajas ?c palets $?med2 caquis ?n1 $?fin)
    (pedido $?ini caquis ?n2 $?resto)
    (max ?max)
    (test (< ?c ?max))
    (test (= ?p 3))
    (test (< ?n ?n2))
    =>
    (retract ?f)
    (assert (robot pos ?p  $?ini caquis (+ ?n 1) $?med cajas (+ ?c 1) palets $?med2 caquis (- ?n1 1) $?fin))
)
(defrule coger_uvas
    (declare (salience 10))
    ?f <- (robot pos ?p  $?ini uvas ?n $?med cajas ?c palets $?med2 uvas ?n1 $?fin)
    (pedido $?ini uvas ?n2 $?resto)
    (max ?max)
    (test (< ?c ?max))
    (test (= ?p 4))
    (test (< ?n ?n2))
    =>
    (retract ?f)
    (assert (robot pos ?p  $?ini uvas (+ ?n 1) $?med cajas (+ ?c 1) palets $?med2 uvas (- ?n1 1) $?fin))
)
(defrule volver
    (declare (salience 20))
    ?f <- (robot pos ?p $?ini cajas ?c $?fin)
    (max ?max)
    (test (= ?c ?max))
    (test (> ?p 0))
    =>
    (retract ?f)
    (assert (robot pos (- ?p 1) $?ini cajas ?c $?fin))
)
(defrule dejar_naranjas
    (declare (salience 30))
    ?f <- (robot pos ?p naranjas ?n $?ini cajas ?c $?med almacen naranjas ?n1 $?fin)
    (test (= ?p 0))
    (test (> ?n 0))
    =>
    (retract ?f)
    (assert (robot pos ?p naranjas (- ?n 1) $?ini cajas (- ?c 1) $?med almacen naranjas (+ ?n1 1) $?fin))
)
(defrule dejar_manzanas
    (declare (salience 30))
    ?f <- (robot pos ?p $?resto manzanas ?n $?ini cajas ?c $?med almacen $?resto2 manzanas ?n1 $?fin)
    (test (= ?p 0))
    (test (> ?n 0))
    =>
    (retract ?f)
    (assert (robot pos ?p $?resto manzanas (- ?n 1) $?ini cajas (- ?c 1) $?med almacen $?resto2 manzanas (+ ?n1 1) $?fin))
)
(defrule dejar_naranjas
    (declare (salience 30))
    ?f <- (robot pos ?p naranjas ?n $?ini cajas ?c $?med almacen naranjas ?n1 $?fin)
    (test (= ?p 0))
    (test (> ?n 0))
    =>
    (retract ?f)
    (assert (robot pos ?p naranjas (- ?n 1) $?ini cajas (- ?c 1) $?med almacen naranjas (+ ?n1 1) $?fin))
)
(defrule dejar_caquis
    (declare (salience 30))
    ?f <- (robot pos ?p $?resto caquis ?n $?ini cajas ?c $?med almacen $?resto2 caquis ?n1 $?fin)
    (test (= ?p 0))
    (test (> ?n 0))
    =>
    (retract ?f)
    (assert (robot pos ?p $?resto caquis (- ?n 1) $?ini cajas (- ?c 1) $?med almacen $?resto2 caquis (+ ?n1 1) $?fin))
)
(defrule dejar_uvas
    (declare (salience 30))
    ?f <- (robot pos ?p $?resto uvas ?n $?ini cajas ?c $?med almacen $?resto2 uvas ?n1 $?fin)
    (test (= ?p 0))
    (test (> ?n 0))
    =>
    (retract ?f)
    (assert (robot pos ?p $?resto uvas (- ?n 1) $?ini cajas (- ?c 1) $?med almacen $?resto2 uvas (+ ?n1 1) $?fin))
)
(defrule final
    (declare (salience 40))
    (robot pos ?p $?resto almacen naranjas ?n1 manzanas ?m1 caquis ?c1 uvas ?u1 )
    (pedido naranjas ?n2 manzanas ?m2 caquis ?c2 uvas ?u2)
    (test (= ?p 0))
    (test (= ?n1 ?n2))
    (test (= ?m1 ?m2))
    (test (= ?c1 ?c2))
    (test (= ?u1 ?u2))
    =>
    (halt)
)